/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as ContactIndexRouteImport } from './routes/contact/index'
import { Route as ArticlesIndexRouteImport } from './routes/articles/index'
import { Route as AboutIndexRouteImport } from './routes/about/index'
import { Route as ProjectsProjectIdRouteImport } from './routes/projects/$projectId'
import { Route as ArticlesArticleIdRouteImport } from './routes/articles/$articleId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactIndexRoute = ContactIndexRouteImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticlesIndexRoute = ArticlesIndexRouteImport.update({
  id: '/articles/',
  path: '/articles/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdRoute = ProjectsProjectIdRouteImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticlesArticleIdRoute = ArticlesArticleIdRouteImport.update({
  id: '/articles/$articleId',
  path: '/articles/$articleId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/articles/$articleId': typeof ArticlesArticleIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/about': typeof AboutIndexRoute
  '/articles': typeof ArticlesIndexRoute
  '/contact': typeof ContactIndexRoute
  '/projects': typeof ProjectsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/articles/$articleId': typeof ArticlesArticleIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/about': typeof AboutIndexRoute
  '/articles': typeof ArticlesIndexRoute
  '/contact': typeof ContactIndexRoute
  '/projects': typeof ProjectsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/articles/$articleId': typeof ArticlesArticleIdRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/about/': typeof AboutIndexRoute
  '/articles/': typeof ArticlesIndexRoute
  '/contact/': typeof ContactIndexRoute
  '/projects/': typeof ProjectsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/articles/$articleId'
    | '/projects/$projectId'
    | '/about'
    | '/articles'
    | '/contact'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/articles/$articleId'
    | '/projects/$projectId'
    | '/about'
    | '/articles'
    | '/contact'
    | '/projects'
  id:
    | '__root__'
    | '/'
    | '/articles/$articleId'
    | '/projects/$projectId'
    | '/about/'
    | '/articles/'
    | '/contact/'
    | '/projects/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ArticlesArticleIdRoute: typeof ArticlesArticleIdRoute
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRoute
  AboutIndexRoute: typeof AboutIndexRoute
  ArticlesIndexRoute: typeof ArticlesIndexRoute
  ContactIndexRoute: typeof ContactIndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact/': {
      id: '/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles/': {
      id: '/articles/'
      path: '/articles'
      fullPath: '/articles'
      preLoaderRoute: typeof ArticlesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles/$articleId': {
      id: '/articles/$articleId'
      path: '/articles/$articleId'
      fullPath: '/articles/$articleId'
      preLoaderRoute: typeof ArticlesArticleIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ArticlesArticleIdRoute: ArticlesArticleIdRoute,
  ProjectsProjectIdRoute: ProjectsProjectIdRoute,
  AboutIndexRoute: AboutIndexRoute,
  ArticlesIndexRoute: ArticlesIndexRoute,
  ContactIndexRoute: ContactIndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
